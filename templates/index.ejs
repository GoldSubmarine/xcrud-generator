<template>
  <div v-loading="loading" class="app-container">
    <x-table
      v-model="searchData"
      :config="tableConfig"
      :data="tableData"
      :page.sync="page"
      :load="get<%= Entity %>Page"
    />
    <dForm v-if="dialogName == 'dForm'" :id="propId" :mode="mode" @refresh="get<%= Entity %>Page" @close="closeDialog" />
  </div>
</template>

<script>
<%
  var baseField = ['id', 'createBy', 'createTime', 'updateBy', 'updateTime', 'delFlag']

  function transformJson(columnItem) {
    if(!baseField.includes(columnItem.field) && columnItem.isTableShow) {
      let item = {}
      item.name = columnItem.field
      item.label = columnItem.comment
      if(columnItem.isFrontSearch) {
        item.search = columnItem.isFrontSearch
        let tag = columnItem.formType.split(",")
        item.xType = tag[0]
        if(tag.length === 2) {
          item.type = tag[1]
        }
      }
      return item
    }
    return null
  }

  function genJsonStr(fields) {
    let result = []
    fields.forEach(columnItem => {
      let item = transformJson(columnItem)
      if(item) {
        let str = "{"
        for(key in item) {
          str += ` ${key}: \'${item[key]}\',`
        }
        str += " }"
        result.push(str)
      }
    })
    return result.join(",\n\t\t\t\t\t")
  }
-%>
import { get<%= Entity %>Page, delete<%= Entity %> } from '@/api/<%= entity %>'
import dForm from './form'

export default {
  components: {
    dForm
  },
  data() {
    return {
      loading: 0,
      tableData: [],
      page: {
        pageNum: 1,
        pageSize: 10,
        total: 0
      },
      searchData: {},
      propId: '',
      dialogName: '',
    }
  },
  computed: {
    tableConfig() {
      const _this = this
      return {
        stripe: true,
        search: true,
        reset: true,
        btn: [
          { text: '新增', click: () => _this.operate('add'), icon: 'el-icon-circle-plus' }
        ],
        column: [
          <%- genJsonStr(fields) %>
        ],
        operate: [
          { text: '编辑', show: true, click: data => _this.operate('edit', data) },
          { text: '删除', show: true, click: _this.del },
          { text: '详情', show: true, click: data => { _this.operate('detail', data) } },
        ]
      }
    }
  },
  mounted() {
    this.get<%= Entity %>Page()
  },
  methods: {
    get<%= Entity %>Page() {
      this.loading++
      get<%= Entity %>Page(this.searchData, this.page.pageNum, this.page.pageSize).then(res => {
        this.tableData = res.list
        this.page.total = res.total
      }).catch(e => console.error(e)).finally(() => this.loading--)
    },
    operate(mode, data) {
      if (mode !== 'add') this.propId = data.id
      this.mode = mode
      this.dialogName = 'dForm'
    },
    del(data) {
      this.delConfirm().then(() => {
        this.loading++
        delete<%= Entity %>(data.id).then(res => {
          this.$message.success('删除成功')
          this.get<%= Entity %>Page()
        }).catch(e => console.log(e)).finally(() => this.loading--)
      }).catch(e => console.log(e))
    },
    closeDialog() {
      this.dialogName = ''
    }
  }
}
</script>

<style scoped>

</style>
